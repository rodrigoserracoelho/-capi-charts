apiVersion: apps/v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: prometheus
    name: prometheus
  spec:
    ports:
    - name: "{{ .Values.service.port }}"
      port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.port }}
    selector:
      app: prometheus
    type: LoadBalancer
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: prometheus
    name: prometheus
  spec:
    selector:
      matchLabels:
        app: prometheus
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: prometheus
      spec:
        containers:
        - image: prom/prometheus:latest
          name: capi-prometheus
          ports:
          - containerPort: {{ .Values.service.port }}
          resources: {}
          volumeMounts:
          - name: prometheus-config
            mountPath: /etc/prometheus/prometheus.yml
            subPath: prometheus.yml
        restartPolicy: Always
        volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
  status: {}
kind: List
metadata: {}
